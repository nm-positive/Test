name: Python Application Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Build Executable
      run: |
        ls
        pyinstaller -F -n=sample .\main.py
        ls

    - name: Archive Executable and Keys
      run: |
        Compress-Archive -Path dist\sample.exe -DestinationPath release.zip

    - name: Tag Info
      id: update_tag_range
      run: |
          $CURRENT_TAG = git describe --tags --abbrev=0
          echo "CURRENT_TAG=$CURRENT_TAG" | Out-File -Append -FilePath $env:GITHUB_ENV
          $PREVIOUS_TAG = git describe --tags --abbrev=0 $CURRENT_TAG^
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" | Out-File -Append -FilePath $env:GITHUB_ENV
          $MESSAGE = git log "$PREVIOUS_TAG..$CURRENT_TAG" --pretty=format:"[%h] %s"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ env.TAG_MESSAGE }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release.zip
        asset_name: release.zip
        asset_content_type: application/zip
